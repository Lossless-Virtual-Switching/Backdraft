# Copyright (c) 2014-2016, The Regents of the University of California.
# Copyright (c) 2016-2017, Nefeli Networks, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# * Neither the names of the copyright holders nor the names of their
# contributors may be used to endorse or promote products derived from this
# software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import os
import subprocess

TX_QUEUE_COUNT = 1
RX_QUEUE_COUNT = 1

bess.reset_all()
bess.resume_all()
#bess.pause_all()



cmd = 'sudo rm /tmp/my_vhost*'
subprocess.call(cmd, shell=True)

#p = PMDPort(port_id=0)
my_vhost1 = PMDPort(name='my_vhost1', vdev='eth_vhost1,iface=/tmp/my_vhost1.sock,queues=2', 
	num_inc_q=TX_QUEUE_COUNT,
	num_out_q=RX_QUEUE_COUNT)
my_vhost2 = PMDPort(name='my_vhost2', vdev='eth_vhost2,iface=/tmp/my_vhost2.sock,queues=2', 
	num_inc_q=TX_QUEUE_COUNT,
	num_out_q=RX_QUEUE_COUNT)
#v_bob = VPort(ifname='eth_bob', docker='vport_test', ip_addrs=['10.255.99.2/24', 'fdd4:955b:82c1:0cb7::1/64'])
#v_alice = VPort(ifname='eth_alice', ip_addrs=['10.10.1.15/24'])

PortInc(port=my_vhost1.name) -> PortOut(port=my_vhost2.name)
PortInc(port=my_vhost2.name) -> PortOut(port=my_vhost1.name)

#bess.resume_all()

#bess.reset_all()
