<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE modulesynopsis SYSTEM "../style/modulesynopsis.dtd">
<?xml-stylesheet type="text/xsl" href="../style/manual.ja.xsl"?>
<!-- English Revision: 689261:1878825 (outdated) -->

<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<modulesynopsis metafile="mod_autoindex.xml.meta">

<name>mod_autoindex</name>
<description>Unix の <code>ls</code> コマンドや
    Win32 の <code>dir</code> シェルコマンドに似た
    ディレクトリインデックスを生成する</description>
<status>Base</status>
<sourcefile>mod_autoindex.c</sourcefile>
<identifier>autoindex_module</identifier>

<summary>
      <p>ディレクトリのインデックスは二つの情報源のうちの
      一つから生成できます:</p>

    <ul>
      <li>普通は <code>index.html</code> と呼ばれる
      ユーザによって書かれたファイル。
      <directive module="mod_dir">DirectoryIndex</directive>
      ディレクティブでこのファイル名を設定します。
      これは <module>mod_dir</module> で制御されます。</li>

      <li>もしくは、サーバによって生成された一覧。
      その他のディレクティブでこの一覧の書式を制御します。
      <directive
      module="mod_autoindex">AddIcon</directive>, <directive
      module="mod_autoindex">AddIconByEncoding</directive> と
      <directive module="mod_autoindex">AddIconByType</directive>
      を使うことで、様々なファイルタイプに対してアイコン一覧を
      セットします。つまり、リストされたファイル毎に、
      ファイルにマッチした一番最初のアイコンが表示されます。
      これらは <module>mod_autoindex</module> で制御されます。</li>
    </ul>
    <p>望むならば、自動インデックス生成を完全に除去 (あるいは置換)
    できるように、この二つの機能は分離されています。</p>

    <p>自動インデックス生成は <code>Options +Indexes</code>
    を使うことで有効になります。詳細については、
    <directive module="core">Options</directive>
    ディレクティブをご覧下さい。</p>

    <p>もし <code><a href="#indexoptions.fancyindexing"
    >FancyIndexing</a></code>オプションが
    <directive module="mod_autoindex">IndexOptions</directive>
    ディレクティブに与えられているならば、
    列の先頭は表示の順番を制御するリンクになります。
    先頭のリンクを選択すると、一覧は再生成されて
    その列の値でソートされます。
    同じ先頭を続けて選択すると、交互に昇順と降順とになります。
    これらの列の先頭のリンクは、
    <directive module="mod_autoindex">IndexOptions</directive>
    ディレクティブの
    <code>SuppressColumnSorting</code>
    オプションで消すことができます。</p>

    <p>"Size" でソートした場合は、用いられるのは
    <em>実際の</em>ファイルのサイズであって、
    表示の値ではないことに注意してください -
    たとえ両方ともが "1K" と表示されていたとしても、
    1010 バイトのファイルは必ず 1011
    バイトのファイルよりも前 (昇順の場合) に表示されます。</p>
</summary>

<section id="query">
    <title>Autoindex リクエストクエリー引数</title>

    <p>Apache 2.0.23 で、
    コラムソートのためにクエリー引数を再編成して、
    新しいクエリーオプションのグループを導入しました。
    出力に対するクライアントのすべての制御を効率的に抹消
    できるように、
    <code><a href="#indexoptions.ignoreclient">IndexOptions
    IgnoreClient</a></code> が導入されました。</p>

    <p>コラムソートのヘッダそれ自体が、
    下記のソートクエリーオプションを付加する
    自分自身を参照するリンクです。
    下記のオプションのどれでも、
    ディレクトリリソースへのリクエストに加えることができます。</p>

    <ul>
      <li><code>C=N</code> は、ファイル名でソートします。</li>

      <li><code>C=M</code> は、更新日時、
      ディレクトリ、ファイル名の順でソートします。</li>

      <li><code>C=S</code> は、サイズ、
      ディレクトリ、ファイル名の順でソートします。</li>

      <li class="separate"><code>C=D</code> は、説明、
      ディレクトリ、ファイル名の順でソートします。</li>

      <li><code>O=A</code> は、昇順で表をソートします。</li>

      <li class="separate"><code>O=D</code> は、降順で表をソートします。</li>

      <li><code>F=0</code> は、単純な表の書式にします。
      (FancyIndex ではありません。)</li>

      <li><code>F=1</code> は、FancyIndex 
      表示の表の書式にします。</li>

      <li><code>F=2</code> は、表を HTML 
      のテーブルを使った FancyIndex の書式にします。</li>

      <li><code>V=0</code> 
      は、バージョンによるソートを無効にします。</li>

      <li class="separate"><code>V=1</code> 
      は、バージョンによるソートを有効にします。</li>

      <li><code>P=<var>pattern</var></code> 
      は、与えられた <var>pattern</var>
      に適合したファイルのみを表示します。</li>
    </ul>

    <p>"P (パターンの P)" クエリー引数は、
    通常の <directive module="mod_autoindex">IndexIgnore</directive>
    ディレクティブが処理された<em>後</em>に検査され、
    ファイル名全てが、他の autoindex
    リスト処理と同様の判定基準下に置かれ続ける
    ことに注意してください。
    <module>mod_autoindex</module> のクエリー引数パーサ (解析) は、
    認識不能なオプションにぶつかると即座に停止します。
    クエリー引数は上の表に従って
    正しい形式になっていなければなりません。</p>

    <p>下の単純な例は、これらのクエリーオプションを
    表します。これをそのまま切り取って HEADER.html 
    ファイルに保存することもできます。
    mod_autoindex が X=Go 入力にぶつかる前に
    引数が全て解釈されるように、
    未知の引数 "X" はリストの最後に置かれています。</p>

    <example>
      &lt;form action="" method="get"&gt;<br />
      <indent>
        Show me a &lt;select name="F"&gt;<br />
        <indent>
          &lt;option value="0"&gt; Plain list&lt;/option&gt;<br />
          &lt;option value="1" selected="selected"&gt; Fancy list&lt;/option&gt;<br />
          &lt;option value="2"&gt; Table list&lt;/option&gt;<br />
        </indent>
        &lt;/select&gt;<br />
        Sorted by &lt;select name="C"&gt;<br />
        <indent>
          &lt;option value="N" selected="selected"&gt; Name&lt;/option&gt;<br />
          &lt;option value="M"&gt; Date Modified&lt;/option&gt;<br />
          &lt;option value="S"&gt; Size&lt;/option&gt;<br />
          &lt;option value="D"&gt; Description&lt;/option&gt;<br />
        </indent>
        &lt;/select&gt;<br />
        &lt;select name="O"&gt;<br />
        <indent>
          &lt;option value="A" selected="selected"&gt; Ascending&lt;/option&gt;<br />
          &lt;option value="D"&gt; Descending&lt;/option&gt;<br />
        </indent>
        &lt;/select&gt;<br />
        &lt;select name="V"&gt;<br />
        <indent>
          &lt;option value="0" selected="selected"&gt; in Normal order&lt;/option&gt;<br />
          &lt;option value="1"&gt; in Version order&lt;/option&gt;<br />
        </indent>
        &lt;/select&gt;<br />
        Matching &lt;input type="text" name="P" value="*" /&gt;<br />
        &lt;input type="submit" name="X" value="Go" /&gt;<br />
      </indent>
      &lt;/form&gt;
    </example>

</section>

<directivesynopsis>
<name>AddAlt</name>
<description>アイコンの代わりに
表示される、ファイル名で選択された代替テキスト</description>
<syntax>AddAlt <var>string</var> <var>file</var> [<var>file</var>] ...</syntax>
<contextlist><context>server config</context>
<context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><directive>AddAlt</directive> は、<code><a
    href="#indexoptions.fancyindexing">FancyIndexing</a></code>
    において、アイコンの代わりに表示する代替テキストを提供します。
    <var>file</var> は、説明するファイルのファイル拡張子、
    ファイル名の一部、ワイルドカード表現、完全なファイル名の
    どれかになります。
    <var>string</var> に空白がある場合は引用符  (<code>"</code>
    か <code>'</code>) で囲む必要があります。
    この文字列は、クライアントが画像を表示できない場合や
    画像のロードを無効にしている場合や
    アイコンの取得に失敗したときに表示されます。</p>

    <example><title>例</title>
      AddAlt "PDF file" *.pdf<br />
      AddAlt Compressed *.gz *.zip *.Z
    </example>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>AddAltByEncoding</name>
<description>アイコンの代わりに表示される、MIME 符号化方法で選択された
代替テキスト</description>
<syntax>AddAltByEncoding <var>string</var> <var>MIME-encoding</var>
[<var>MIME-encoding</var>] ...</syntax>
<contextlist><context>server config</context>
<context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><directive>AddAltByEncoding</directive> は、
    <code><a href="#indexoptions.fancyindexing">FancyIndexing</a></code>
    において、アイコンの代わりに表示する代替文字列を提供します。
    <var>MIME-encoding</var> は有効な符号化、例えば
    <code>x-compress</code>
    です。 
    <var>string</var> に空白があるときは、引用符 (<code>"</code> か
    <code>'</code>) で囲む必要があります。
    この文字列は、クライアントが画像を表示できない場合や
    画像のロードを無効にしている場合や
    アイコンの取得に失敗したときに表示されます。</p>

    <example><title>例</title>
      AddAltByEncoding gzip x-gzip
    </example>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>AddAltByType</name>
<description>アイコンの代わりに
表示される、MIME タイプで選択された代替テキスト</description>
<syntax>AddAltByType <var>string</var> <var>MIME-type</var>
[<var>MIME-type</var>] ...</syntax>
<contextlist><context>server config</context>
<context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><directive>AddAltByType</directive> は、
    <code><a href="#indexoptions.fancyindexing">FancyIndexing</a></code>
    において、アイコンの代わりに表示する代替文字列を設定します。
    <var>MIME-type</var> は有効なタイプ、例えば
    <code>text/html</code>
    です。
    <var>string</var> に空白があるときは、引用符 (<code>"</code> か
    <code>'</code>) で囲む必要があります。
    この文字列は、クライアントが画像を表示できない場合や
    画像のロードを無効にしている場合や
    アイコンの取得に失敗したときに表示されます。</p>

    <example><title>例</title>
      AddAltByType 'plain text' text/plain
    </example>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>AddDescription</name>
<description>ファイルに対して表示する説明</description>
<syntax>AddDescription <var>string</var> <var>file</var> [<var>file</var>] ...</syntax>
<contextlist><context>server config</context>
<context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><code><a href="#indexoptions.fancyindexing">FancyIndexing</a></code>
    において、ファイルに対して表示する説明を設定します。
    <var>file</var> は説明するファイルのファイル拡張子、
    ファイル名の一部、ワイルドカード表現、完全なファイル名の
    どれかになります。
    <var>string</var> は二重引用符 (<code>"</code>) で囲まれます。</p>

    <example><title>例</title>
      AddDescription "The planet Mars" /web/pics/mars.gif
    </example>

    <p>通常のデフォルトの説明領域は 23 バイトの幅です。
    <code><a href="#indexoptions.suppressicon"
    >IndexOptions SuppressIcon</a></code>
    オプションで 6 バイト追加、
    <code><a href="#indexoptions.suppresssize"
    >IndexOptions SuppressSize</a></code>
    オプションで 7 バイト追加、
    <code><a href="#indexoptions.suppresslastmodified"
    >IndexOptions SuppressLastModified</a></code>
    オプションで 19 バイト追加されます。
    ですから、デフォルトの説明コラムの最大幅は
    55 バイトになります。</p>

    <p>このコラムの大きさを上書きしたり、
    説明が無制限長でもよいようにするための詳細に関しては、
    <a href="#indexoptions.descriptionwidth">DescriptionWidth</a>
    という
    <directive module="mod_autoindex">IndexOptions</directive> 
    のキーワードをご覧下さい。</p>

    <note><title>警告</title>
      <p><directive>AddDescription</directive> 
      で定義された説明テキストは、タグや文字列といった
      HTML マークアップを含むことができます。
      もし、説明コラムの幅によってタグ付けされた要素が丸め込まれた
       (太字の語句の最後が切れるといった) 場合、
      出力結果は、ディレクトリ一覧の残りの部分に影響を与えるでしょう。</p>
    </note>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>AddIcon</name>
<description>ファイルに表示するアイコンを名前で選択</description>
<syntax>AddIcon <var>icon</var> <var>name</var>
[<var>name</var>] ...</syntax>
<contextlist><context>server config</context>
<context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><code><a href="#indexoptions.fancyindexing">FancyIndexing</a></code>
    において、
    <var>name</var> で終わるファイルの隣に表示するアイコンを設定します。
    <var>icon</var> は、(% でエスケープされた) アイコンへの相対 URL
    か、他の書式 (<var>alttext</var>, <var>url</var>) です。
    ここで <var>alttext</var>
    は、非グラフィカルブラウザ向けにアイコンに付けられたテキストタグです。
    </p>

    <p><var>name</var> は、ディレクトリに対応する <code>^^DIRECTORY^^</code>
    か、空白行に対応する <code>^^BLANKICON^^</code>  (一覧が正しく表示されるために) か、
    ファイル拡張子か、ワイルドカード表現か、ファイル名の一部か
    完全なファイル名です。</p>

    <example><title>例</title>
      AddIcon (IMG,/icons/image.xbm) .gif .jpg .xbm<br />
      AddIcon /icons/dir.xbm ^^DIRECTORY^^<br />
      AddIcon /icons/backup.xbm *~
    </example>

    <p>もし可能なら、
    <directive>AddIcon</directive>
    より
    <directive module="mod_autoindex">AddIconByType</directive>
    を優先的に使うべきでしょう。</p>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>AddIconByEncoding</name>
<description>ファイルに表示するアイコンを MIME
符号化方法で選択</description>
<syntax>AddIconByEncoding <var>icon</var> <var>MIME-encoding</var>
[<var>MIME-encoding</var>] ...</syntax>
<contextlist><context>server config</context>
<context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><code><a href="#indexoptions.fancyindexing">FancyIndexing</a></code>
    において、ファイルの隣に表示するアイコンを設定します。
    <var>icon</var> は、(% でエスケープされた) アイコンへの相対 URL
    か、他の書式 <code>(<var>alttext</var>, <var>url</var>)</code> です。
    ここで <var>alttext</var>
    は、非グラフィカルブラウザ向けにアイコンに付けられたテキストタグです。
    </p>

    <p><var>MIME-encoding</var> は、有効なコンテントエンコーディング、
    例えば <code>x-compress</code>です。</p>

    <example><title>例</title>
      AddIconByEncoding /icons/compress.xbm x-compress
    </example>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>AddIconByType</name>
<description>ファイルの隣に表示するアイコンを
MIME タイプによって選択</description>
<syntax>AddIconByType <var>icon</var> <var>MIME-type</var>
[<var>MIME-type</var>] ...</syntax>
<contextlist><context>server config</context>
<context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><code><a href="#indexoptions.fancyindexing">FancyIndexing</a></code>
    において、ファイルの隣に表示するアイコンを設定します。
    <var>icon</var> は、(% でエスケープされた) アイコンへの相対 URL
    か、他の書式 <code>(<var>alttext</var>, <var>url</var>)</code> です。
    ここで <var>alttext</var>
    は、非グラフィカルブラウザ向けにアイコンに付けられたテキストタグです。
    </p>

    <p><var>MIME-type</var> は、要求されたタイプに該当する
    ワイルドカード表現です。</p>

    <example><title>例</title>
      AddIconByType (IMG,/icons/image.xbm) image/*
    </example>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>DefaultIcon</name>
<description>特定のアイコンが何も設定されていない時に
ファイルに表示するアイコン</description>
<syntax>DefaultIcon <var>url-path</var></syntax>
<contextlist><context>server config</context>
<context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><code><a href="#indexoptions.fancyindexing">FancyIndexing</a></code>
    において、
    特定のアイコンがない場合にファイルに表示するアイコンを設定します。
    <var>url-path</var> は、(% でエスケープされた) アイコンへの相対 URL
    です。</p>

    <example><title>例</title>
      DefaultIcon /icon/unknown.xbm
    </example>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>HeaderName</name>
<description>
インデックス一覧の先頭に挿入されるファイルの名前</description>
<syntax>HeaderName <var>filename</var></syntax>
<contextlist><context>server config</context>
<context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><directive>HeaderName</directive> 
    ディレクティブは、
    インデックス一覧の先頭に挿入するファイルの名前を設定します。
    <var>Filename</var> は取り込むファイルの名前です。</p>

    <example><title>例</title>
      HeaderName HEADER.html
    </example>

    <note>
      <p>HeaderName も <directive
      module="mod_autoindex">ReadmeName</directive> 
      も両方とも現在は、<var>filename</var> 
      をインデックスされているディレクトリに用いられた URI
      に対する相対 URI パスとして扱います。
      <var>filename</var> がスラッシュで始まる場合は、
      <directive module="core">DocumentRoot</directive>
      からの相対パスとなります。</p>

      <example><title>例</title>
        HeaderName /include/HEADER.html
      </example>

      <p><var>filename</var> は
      メジャーコンテントタイプが "<code>text/*</code>" 
       (<em>例えば</em>、<code>text/html</code>, 
      <code>text/plain</code> 等です。) 
      のドキュメントとして解決
      されなければなりません。これはつまり、
      もし CGI スクリプトの実際のファイルタイプが
      次のディレクティブのようにして実際の出力とは異なって
      <code>text/html</code> としてマークされている場合、
      <var>filename</var>
      は CGI スクリプトを参照するかも知れない、
      ということを意味します:</p>

      <example>
        AddType text/html .cgi
      </example>

      <p><directive module="core">Options</directive> <code>MultiViews</code> が
      有効になっている場合は、
      <a href="../content-negotiation.html">コンテントネゴシエーション</a>
      が行なわれます。
      もし <var>filename</var> が (CGI スクリプトでない) 静的な 
      <code>text/html</code> ドキュメントで解決され、
      <directive module="core">options</directive>
      <code>Includes</code> か <code>IncludesNOEXEC</code>
      が有効になっている場合は、
      ファイルはサーバーサイドインクルードで処理されます
      (<module>mod_include</module> ドキュメントを参照して下さい)。</p>
    </note>

    <p>もし <directive>HeaderName</directive> で指定されたファイルが
    HTML ドキュメントの開始部分 (&lt;html&gt;, &lt;head&gt;, 
    等) を含んでいたら、
    <a href="#indexoptions.suppresshtmlpreamble"><code>IndexOptions
    +SuppressHTMLPreamble</code></a>
    を設定して、これらのタグが繰り返されないようにしたいと思うでしょう。</p>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>IndexIgnore</name>
<description>ディレクトリ一覧を行なう際に無視すべき
ファイルリストに追加</description>
<syntax>IndexIgnore <var>file</var> [<var>file</var>] ...</syntax>
<contextlist><context>server config</context>
<context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><directive>IndexIgnore</directive> ディレクティブは、
    ディレクトリの一覧を行う際に無視すべきファイルリストに追加します。
    <var>file</var> は、
    シェル形式のワイルドカード表現か完全なファイル名です。
    IndexIgnore が複数ある場合は、無視するリストに追加が行われ、
    置換は行われません。デフォルトではリストには <code>.</code>
    (カレントディレクトリ) が含まれています。</p>

    <example>
      IndexIgnore README .htaccess *.bak *~
    </example>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>IndexOptions</name>
<description>ディレクトリインデックスの様々な設定項目
</description>
<syntax>IndexOptions  [+|-]<var>option</var> [[+|-]<var>option</var>] ...</syntax>
<contextlist><context>server config</context>
<context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><directive>IndexOptions</directive> 
    は、ディレクトリインデックスの挙動を指定します。
    <var>option</var> は次のどれかです:</p>

    <dl>
      <dt><a name="indexoptions.charset"
               id="indexoptions.charset"
      >Charset=<var>character-set</var></a> (<em>Apache 2.0.61
      以降</em>)</dt>

      <dd><code>Charset</code> キーワードで、
      生成されるページの文字セットを指定できます。
      下位のファイルシステムが Unicode ベースかどうかに依存しますが、
      デフォルト値は <var>ISO-8859-1</var> か <var>UTF-8</var>
      になります。

      <example><title>Example:</title>
        IndexOptions Charset=UTF-8
      </example>
      </dd>

      <dt><a name="indexoptions.type"
               id="indexoptions.type"
      >Type=<var>MIME content-type</var></a> (<em>Apache 2.0.61
      以降</em>)</dt>

      <dd><code>Type</code> キーワードで、
      生成されるページの MIME コンテントタイプを指定できます。
      デフォルト値は <var>text/html</var> になります。

      <example><title>Example:</title>
        IndexOptions Type=text/plain
      </example>
      </dd>

      <dt><a name="indexoptions.descriptionwidth"
               id="indexoptions.descriptionwidth"
      >DescriptionWidth=[<var>n</var> | *]</a>
      (<em>2.0.23 以降</em>)</dt>

      <dd><code>DescriptionWidth</code> 
      キーワードは説明コラムの幅を文字数で指定することができます。</dd>

      <dd><code>-DescriptionWidth</code> (または非設定) で、
      <module>mod_autoindex</module> が最適な幅を計算するようにできます。</dd>

      <dd><code>DescriptionWidth=<var>n</var></code> 
      で、コラム幅を <var>n</var> バイトに固定します。</dd>

      <dd><code>DescriptionWidth=*</code> 
      は、最長の説明に合わせて必要な長さまでコラムを延ばします。</dd>

      <dd><strong>説明を丸め込んだ場合特有の危険については
      <directive module="mod_autoindex">AddDescription</directive>
      セクションをお読み下さい。</strong></dd>

      <dt><a name="indexoptions.fancyindexing"
               id="indexoptions.fancyindexing">FancyIndexing</a></dt>

      <dd>飾り付きインデックスをオンにします。</dd>

      <dt><a name="indexoptions.foldersfirst"
               id="indexoptions.foldersfirst">FoldersFirst</a>
      (<em>2.0.23 以降</em>)</dt>

      <dd>このオプションが有効になった場合、サブディレクトリの一覧は
      <em>必ず</em>最初に現われて、通常のファイルはその後に続きます。
      一覧は基本的には、ファイルとディレクトリの二つの部分に分けられて、
      それぞれは別々にソートされ、その後サブディレクトリを先にして
      表示が行なわれます。例えばソート順が名前の降順になっていて、
      <code>FoldersFirst</code> が有効になっている場合は、
      サブディレクトリ <code>Zed</code> はサブディレクトリ
      <code>Beta</code> よりも前にリストされ、通常のファイル
      <code>Gamma</code> や <code>Alpha</code>
      よりも前にリストされます。<strong>このオプションは
      <a href="#indexoptions.fancyindexing"><code>FancyIndexing</code></a>
      も有効になっているときにのみ有効です。</strong></dd>

      <dt><a name="indexoptions.htmltable"
               id="indexoptions.htmltable">HTMLTable</a> <em>(実験的、
      Apache 2.0.23 以降)</em></dt>

      <dd>この実験的なオプションは <code>FancyIndexing</code> とともに指定することで、
      飾りの付いたディレクトリ一覧のためにテーブルを使った単純な表を作ります。
      これは古いブラウザを混乱させるかもしれないことに注意してください。
      WinNT やその他 utf-8 
      が有効なプラットホームのように、ファイル名や説明テキストが
      右読みになったり左読みになりえる場合は特に必要です。</dd>

      <dt><a name="indexoptions.iconsarelinks"
               id="indexoptions.iconsarelinks">IconsAreLinks</a></dt>

      <dd>これは、FancyIndexing において、
      アイコンもファイル名へのリンクの一部にします。</dd>

      <dt><a name="indexoptions.iconheight"
               id="indexoptions.iconheight">IconHeight[=<var
	       >pixels</var>]</a></dt>

      <dd>このオプションが、<code>IconWidth</code> とともに
      使われている場合は、サーバはファイルアイコンのための
      <code>img</code> タグに <code>height</code> と <code>width</code>
      属性を取り込むようになります。
      これによって、イメージ全てをロードし終わるまで待たなくても、
      ブラウザはページレイアウトをあらかじめ計算することができます。
      このオプションに何も値が与えられなければ、Apache
      ソフトウェアで提供されているアイコンの標準の高さが
      デフォルトなります。</dd>

      <dt><a name="indexoptions.iconwidth"
               id="indexoptions.iconwidth">IconWidth[=<var
	       >pixels</var>]</a></dt>

      <dd>このオプションが、<code>IconHeight</code> とともに使われている場合は、
      サーバはファイルアイコンのための <code>img</code>
      タグに <code>height</code> と <code>width</code>
      属性を取り込むようになります。
      これによって、イメージ全てをロードし終わるまで待たなくても、
      ブラウザはページレイアウトをあらかじめ計算することができます。
      このオプションに何も値が与えられなければ、Apache
      ソフトウェアで提供されているアイコンの標準の高さが
      デフォルトなります。</dd>

      <dt><a name="indexoptions.ignorecase"
               id="indexoptions.ignorecase">IgnoreCase</a></dt>

      <dd>このオプションが有効であると、ファイル名は大文字小文字を区別せずにソートされます。
      例えばファイル名が昇順でソートされ、<code>IgnoreCase</code> が有効であれば、
      Zeta は alfa の後にリストされます
      (注意: GAMMA は常に gamma の前になります)。</dd>

      <dt><a name="indexoptions.ignoreclient"
               id="indexoptions.ignoreclient">IgnoreClient</a></dt>

      <dd>このオプションで <module>mod_autoindex</module> は、
      クライアントからの全てのクエリー変数を無視するようになります。
      これはソート順も含みます。
      (つまり <code><a href="#indexoptions.suppresscolumnsorting"
      >SuppressColumnSorting</a></code>
      も有効になります。)</dd>

      <dt><a name="indexoptions.namewidth"
               id="indexoptions.namewidth">NameWidth=[<var>n</var> 
	       | *]</a></dt>

      <dd><code>NameWidth</code> キーワードでファイル名コラムの幅をバイト数で
      指定できます。</dd>

      <dd><code>-NameWidth</code> (または非設定) で、
      <module>mod_autoindex</module> が最適な幅を計算するようにできます。</dd>

      <dd><code>NameWidth=<var>n</var></code> 
      で、コラム幅を <var>n</var> バイトに固定します。</dd>

      <dd><code>NameWidth=*</code>
      は、必要な長さまでコラムを延ばします。</dd>

      <dt><a name="indexoptions.scanhtmltitles"
               id="indexoptions.scanhtmltitles">ScanHTMLTitles</a></dt>

      <dd>FancyIndexing のために、
       HTML ドキュメントからタイトルを取り出すことを可能にします。
      もしファイルに
      <directive module="mod_autoindex">AddDescription</directive>
      で説明が与えられていなければ、
      httpd は <code>title</code> タグの値を読むためにドキュメントを読み始めます。
      これは CPU や disk に負荷をかけます。</dd>

      <dt><a name="indexoptions.showforbidden"
               id="indexoptions.showforbidden">ShowForbidden</a></dt>

      <dd>通常 Apache はサブリクエストの結果が<code>HTTP_UNAUTHORIZED</code> や
      <code>HTTP_FORBIDDEN</code> のファイルは一覧に表示しません。
      このオプションを指定すると、そのようなファイルも一覧に表示します。</dd>

      <dt><a name="indexoptions.suppresscolumnsorting"
               id="indexoptions.suppresscolumnsorting"
	       >SuppressColumnSorting</a></dt>

      <dd>もし指定されていれば、Apache は
      FancyIndexing で表示されているディレクトリ一覧での
      コラムの先頭を、ソートのためのリンクにしなくなります。
      デフォルトの挙動は、リンクとします。
      コラムの先頭を選ぶとコラムの値に従ってディレクトリリストを
      ソートします。
      <strong>Apache 2.0.23 以前では、これは同時に
      ソート文字列のためのクエリー引数の解析も無効にします。
      </strong>
      この挙動は Apache 2.0.23 では
      <a href="#indexoptions.ignoreclient"><code>IndexOptions
      IgnoreClient</code></a> で制御されるようになっています。</dd>

      <dt><a name="indexoptions.suppressdescription"
               id="indexoptions.suppressdescription"
	       >SuppressDescription</a></dt>

      <dd>これは FancyIndexing におけるファイルの説明を消去します。
      デフォルトでは、説明は定義されておらず、
      このオプションを使うと他のために 23
      文字の空白を稼ぐことができます。 ファイルの説明に関する情報は、
      <directive module="mod_autoindex">AddDescription</directive> 
      をご覧下さい。また、説明のコラムサイズを制限する
      <code><a href="#indexoptions.descriptionwidth">DescriptionWidth</a></code>
      インデックスオプションもご覧下さい。</dd>

      <dt><a name="indexoptions.suppresshtmlpreamble"
               id="indexoptions.suppresshtmlpreamble"
	       >SuppressHTMLPreamble</a></dt>

      <dd>通常、
      <directive module="mod_autoindex">HeaderName</directive>
      ディレクティブで指定したファイルを
      ディレクトリが実際に含んでいれば、標準的な HTML プリアンブル
      (<code>&lt;html&gt;</code>, <code>&lt;head&gt;</code>, <em>等</em>) の後に、
      モジュールはファイルの中身をインクルードします。
      <code>SuppressHTMLPreamble</code> オプションは、
      この挙動を無効にできて、
      モジュールがヘッダーファイルの中身から表示を始めます。
      この場合、ヘッダーファイルは正しい HTML
      命令を含んでいなければなりません。
      ヘッダーファイルが存在しない場合は、プリアンブルは通常通り
      生成されます。</dd>

      <dt><a name="indexoptions.suppressicon"
               id="indexoptions.suppressicon">SuppressIcon</a> (<em>Apache
      2.0.23 以降</em>)</dt>

      <dd>
      これは FancyIndexing の一覧からアイコンを消去します。
      <code>SuppressIcon</code> と <code>SuppressRules</code>
      と組合わせることによって正しい HTML 3.2 の出力が得られます。
      HTML 3.2 の最終規格は、 <code>img</code> と <code>hr</code>
      が <code>pre</code> ブロックに入る (FancyIndexing 一覧で書式に使われています) 
      ことを禁止しています。</dd>

      <dt><a name="indexoptions.suppresslastmodified"
               id="indexoptions.suppresslastmodified"
	       >SuppressLastModified</a></dt>

      <dd>FancyIndexing 一覧において最終更新日時の表示を消去します。</dd>

      <dt><a name="indexoptions.suppressrules"
               id="indexoptions.suppressrules">SuppressRules</a>
       (<em>Apache 2.0.23 以降</em>) </dt>

      <dd>ディレクトリ一覧において水平区切り線 (<code>hr</code> タグ) を消去します。
      <code>SuppressIcon</code> と <code>SuppressRules</code>
      と組合わせることによって正しい HTML 3.2 の出力が得られます。
      HTML 3.2 の最終規格は、 <code>img</code> と <code>hr</code>
      が <code>pre</code> ブロックに入る (FancyIndexing 一覧で書式に使われています) 
      ことを禁止しています。</dd>

      <dt><a name="indexoptions.suppresssize"
               id="indexoptions.suppresssize">SuppressSize</a></dt>

      <dd>FancyIndexing 一覧においてファイルサイズの表示を消去します。</dd>

      <dt><a name="indexoptions.trackmodified"
               id="indexoptions.trackmodified">TrackModified</a>
	       (<em>Apache 2.0.23 以降</em>)</dt>

      <dd>これは HTTP ヘッダ中に、
      ディレクトリの <code>Last-Modified</code> や 
      <code>ETag</code> を含めます。
      これは、オペレーティングシステムやファイルシステムが
      適切な stat() の返り値を返す場合にのみ有効です。
      いくつかの UNIX システム、OS2 の JFS や Win32 の NTFS
      ボリュームはそうなっています。
      例えば、OS2 と Win32 FAT ボリュームはそうではありません。
      この機能が有効になると、クライアントやプロキシは
      <code>HEAD</code> リクエストを行うことによって、
      ファイル一覧の変化を追跡することができるようになります。
      オペレーティングシステムによっては、新規ファイルや
      移動ファイルは正しく追跡するけれども、
      ディレクトリ中のファイルのサイズや日付は追跡しないということに
      注意してください。
      <strong>既に存在するファイルのサイズや日付のスタンプが変化しても、
      全ての Unix プラットホームでは、
      <code>Last-Modified</code> ヘッダーを更新しません。</strong>
      もしこれが重要であれば、
      このオプションを無効のままにしてください。</dd>

      <dt><a name="indexoptions.versionsort"
               id="indexoptions.versionsort">VersionSort</a>
      (<em>Apache 2.0a3 以降</em>)</dt>

      <dd><code>VersionSort</code> キーワードはバージョン番号を含んだファイルが
      自然な方法でソートされるようにします。
      文字列は通常通りソートされ、
      それ以外の、説明や名前中の数となる部分文字列は
      その数値で比較されます。

      <example><title>例:</title>
        foo-1.7<br />
        foo-1.7.2<br />
        foo-1.7.12<br />
        foo-1.8.2<br />
        foo-1.8.2a<br />
        foo-1.12
      </example>

      <p>番号が 0 から始まる場合は、端数と考えられます</p>

      <example>
        foo-1.001<br />
        foo-1.002<br />
        foo-1.030<br />
        foo-1.04
      </example>
      </dd>

      <dt><a name="indexoptions.xhtml"
               id="indexoptions.xhtml">XHTML</a>
      (<em>Apache 2.0.49 以降</em>)</dt>

      <dd><code>XHTML</code> キーワードを指定すると、<module>mod_autoindex</module>
      は HTML 3.2 の代わりに XHTML 1.0 のコードを出力するようになります。</dd>
    </dl>

   <!--
     XXX: we should consider to allow sections inside <usage>
     this would require some xslt changes...
   -->
   <dl><dt>増減指定できる IndexOptions</dt>
   <dd>
     <p>Apache 1.3.3 では、
     <directive>IndexOptions</directive> 
     ディレクティブの扱いで幾つかの大きな変化が導入されました。
     特に、</p>

     <ul>
     <li>一つのディレクトリに対する複数の
     <directive>IndexOptions</directive> 
     ディレクティブは、現在では一つにマージされます。

     <example>
       &lt;Directory /foo&gt;
       <indent>
         IndexOptions HTMLTable<br />
         IndexOptions SuppressColumnsorting
       </indent>
       &lt;/Directory&gt;
     </example>

     <p>の結果は、次の指定と同一の結果になります。</p>

     <example>
       IndexOptions HTMLTable SuppressColumnsorting
     </example>
     </li>

     <li>増減構文
     (<em>すなわち</em>、'+' や '-'
     の接頭辞が付くキーワード) の追加。</li>
     </ul>

     <p>'+' や '-' 接頭辞の付いたキーワードに出会うとそれは、
     その時点での <directive>IndexOptions</directive>
     の設定 (これは上流のディレクトリを受け継ぎます) 
     に対して適応されます。
     しかしながら、接頭辞の付かないキーワードが処理された場合は、
     受け継いだオプション全てとそれまで出会った増減設定全てが
     消去されます。次の例を考えてみてください:</p>

     <example>
       IndexOptions +ScanHTMLTitles -IconsAreLinks FancyIndexing<br />
       IndexOptions +SuppressSize
     </example>

     <p>最終的な効果は
     <code>IndexOptions&nbsp;FancyIndexing&nbsp;+SuppressSize</code>
     と同一です。
     接頭辞の付かない <code>FancyIndexing</code>
     でそれ以前の増減キーワードは無効になり、
     その後の累積が始まるからです。</p>

     <p>あるディレクトリにおいて上位のディレクトリに指定された設定に影響されることなく
     <directive>IndexOptions</directive> を設定したい場合、
     <code>+</code> や <code>-</code>
     接頭辞の付かないキーワードで設定してください。</p>
   </dd>
   </dl>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>IndexOrderDefault</name>
<description>
ディレクトリインデックスの標準の順番付けを設定</description>
<syntax>IndexOrderDefault Ascending|Descending
Name|Date|Size|Description</syntax>
<default>IndexOrderDefault Ascending Name</default>
<contextlist><context>server config</context>
<context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><directive>IndexOrderDefault</directive> ディレクティブは
    <code><a href="#indexoptions.fancyindexing">FancyIndexing</a></code>
    インデックスオプションと併せて用いられます。
    デフォルトでは、FancyIndexing 
    のディレクトリ一覧はファイル名の昇順で表示されます。
    <directive>IndexOrderDefault</directive>
    で、初期状態の表示順番を変えることができます。</p>

    <p><directive>IndexOrderDefault</directive>
    は二つの引数をとります。一つ目はソートの方向を指示する
    <code>Ascending</code> か <code>Descending</code> のいずれかです。
    二つ目の引数は <code>Name</code>, <code>Date</code>,
    <code>Size</code> か <code>Description</code> 
    のいずれか一つのキーワードであって、1つ目のソートキーを指定します。
    2つ目のソートキーは<em>常に</em>ファイル名の昇順になります。</p>

    <p>このディレクティブと <code><a
    href="#indexoptions.suppresscolumnsorting">SuppressColumnSorting</a></code>
    インデックスオプションとを組み合わせることで、
    ディレクトリ一覧をある特定の順番でのみ表示するようにできます。
    これは、
    クライアントが別の順番でディレクトリ一覧をリクエストすることを防ぎます。</p>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>IndexStyleSheet</name>
<description>ディレクトリインデックスに CSS スタイルシートを追加する</description>
<syntax>IndexStyleSheet <var>url-path</var></syntax>
<contextlist><context>server config</context><context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><directive>IndexStyleSheet</directive> ディレクティブは
    インデックス表示に使用される CSS のファイル名を設定します。
    </p>
    <example>
      <title>例</title>
      IndexStyleSheet "/css/style.css"
    </example>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>IndexHeadInsert</name>
<description>インデックスページの HEAD セクションにテキストを挿入する</description>
<syntax>IndexHeadInsert <var>"markup ..."</var></syntax>
<contextlist><context>server config</context><context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><directive>IndexHeadInsert</directive> ディレクティブを使って
    インデックスとして生成されたHTMLの <var>&lt;head&gt;</var> セクションに
    挿入する文字列を指定します。</p>
    <example>
      <title>Example</title>
      IndexHeadInsert "&lt;link rel=\"sitemap\" href=\"/sitemap.html\"&gt;"
    </example>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>ReadmeName</name>
<description>インデックス一覧の最後に挿入されるファイルの名前</description>
<syntax>ReadmeName <var>filename</var></syntax>
<contextlist><context>server config</context>
<context>virtual host</context>
<context>directory</context><context>.htaccess</context>
</contextlist>
<override>Indexes</override>

<usage>
    <p><directive>ReadmeName</directive> ディレクティブは、
    インデックスの終わりに付け加えられるファイルの名前を設定します。
    <var>filename</var> は挿入するファイルの名前で、
    一覧の行われている位置から相対的なものとして解釈されます。
    <var>filename</var> がスラッシュで始まる場合は、
    <directive module="core">DocumentRoot</directive>
    からの相対パスとなります。</p>

    <example><title>例</title>
      ReadmeName FOOTER.html
    </example>

    <example><title>例 2</title>
    ReadmeName /include/FOOTER.html
    </example>

    <p>より詳細にまでこの挙動について記述している <directive
    module="mod_autoindex">HeaderName</directive>
    もご覧下さい。</p>
</usage>
</directivesynopsis>

</modulesynopsis>
