<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE modulesynopsis SYSTEM "../style/modulesynopsis.dtd">
<?xml-stylesheet type="text/xsl" href="../style/manual.ja.xsl"?>
<!-- English Revision: 420990:1874148 (outdated) -->

<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<modulesynopsis metafile="mod_auth_basic.xml.meta">

<name>mod_auth_basic</name>
<description>基本認証</description>
<status>Base</status>
<sourcefile>mod_auth_basic.c</sourcefile>
<identifier>auth_basic_module</identifier>
<compatibility>Apache 2.1 以降</compatibility>

<summary>
    <p>与えられたプロバイダ <transnote>認証での照会を行う問い合わせ先</transnote>
    でユーザを検索し、HTTP 基本認証でアクセス制限できるようになります。
    HTTP ダイジェスト認証については <module>mod_auth_digest</module>
    で提供されます。このモジュールを使う際はこのモジュールのほかに
    <module>mod_authn_file</module> といった認証モジュールと、
    <module>mod_authz_user</module> といった承認モジュールとの両方を、
    それぞれひとつ以上組み合わせて使うことになります。</p>
</summary>
<seealso><directive module="mod_authn_core">AuthName</directive></seealso>
<seealso><directive module="mod_authn_core">AuthType</directive></seealso>
<seealso><directive module="mod_authz_core">Require</directive></seealso>
<seealso><directive module="mod_authz_core">Reject</directive></seealso>
<seealso><directive module="mod_access_compat">Satisfy</directive> (Deprecated)</seealso>
<seealso><directive module="mod_authz_core">&lt;SatisfyAll&gt;</directive></seealso>
<seealso><directive module="mod_authz_core">&lt;SatisfyOne&gt;</directive></seealso>
<seealso><a href="../howto/auth.html">Authentication howto</a></seealso>

<directivesynopsis>
<name>AuthBasicProvider</name>
<description>この位置に対する認証プロバイダを設定します。</description>
<syntax>AuthBasicProvider <var>provider-name</var>
[<var>provider-name</var>] ...</syntax>
<default>AuthBasicProvider file</default>
<contextlist><context>directory</context><context>.htaccess</context></contextlist>
<override>AuthConfig</override>

<usage>
    <p><directive>AuthBasicProvider</directive> ディレクティブで、
    この位置に対するユーザ認証に用いられる認証プロバイダを設定します。
    デフォルトになっている <code>file</code> プロバイダは
    <module>mod_authn_file</module> モジュールで実装されています。
    指定したプロバイダを実装しているモジュールが、
    必ずサーバに組み込まれているようにしてください。</p>

    <example><title>Example</title>
      &lt;Location /secure&gt;<br />
      <indent>
        AuthType basic<br />
        AuthName "private area"<br />
        AuthBasicProvider  dbm<br />
        AuthDBMType        SDBM<br />
        AuthDBMUserFile    /www/etc/dbmpasswd<br />
        Require            valid-user<br />
      </indent>
      &lt;/Location&gt;
    </example>

    <p>認証プロバイダは <module>mod_authn_dbm</module>,
    <module>mod_authn_file</module>,
    <module>mod_authn_dbd</module>,
    <module>mod_authnz_ldap</module> で実装されています。</p>
</usage>
</directivesynopsis>

<directivesynopsis>
<name>AuthBasicAuthoritative</name>
<description>認証と承認を、より低いレベルのモジュールに移行させるかを
設定します。</description>
<syntax>AuthBasicAuthoritative On|Off</syntax>
<default>AuthBasicAuthoritative On</default>
<contextlist><context>directory</context><context>.htaccess</context></contextlist>
<override>AuthConfig</override>

<usage>
    <p>通常は、<directive module="mod_auth_basic">AuthBasicProvider</directive>
    ディレクティブで指定した承認モジュールを順に使ってユーザを検査しようとして、
    どのプロバイダでもユーザを検査できなかった場合、アクセス拒否します。
    <directive>AuthBasicAuthoritative</directive> を <code>Off</code>
    と明示的に設定すると <strong>ユーザ ID がなかったり</strong>、
    <strong>ルールがなかったり</strong>する際に、認証と承認の両方について、
    プロバイダー機構で実装されていないモジュールに処理を移行させることができます。
    <directive module="mod_auth_basic">AuthBasicProvider</directive>
    ディレクティブで設定できないサードパーティ製のモジュールと、
    <module>mod_auth_basic</module>
    とを組み合わせるときにのみ必要になるでしょう。
    そのようなモジュールを使う場合、処理順序はモジュールのソースコードが
    どうなっているかによって決まり、処理順序を指定することはできません。</p>
</usage>
</directivesynopsis>

</modulesynopsis>
