<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE modulesynopsis SYSTEM "../style/modulesynopsis.dtd">
<?xml-stylesheet type="text/xsl" href="../style/manual.ja.xsl"?>
<!-- English Revision: 431460:1414094 (outdated) -->

<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<modulesynopsis metafile="worker.xml.meta">

<name>worker</name>
<description>マルチスレッドとマルチプロセスのハイブリッド型
ウェブサーバを実装したマルチプロセッシングモジュール</description>
<status>MPM</status>
<sourcefile>worker.c</sourcefile>
<identifier>mpm_worker_module</identifier>

<summary>
    <p>このマルチプロセッシングモジュール (MPM) 
    は、マルチスレッドとマルチプロセスのハイブリッド型サーバを
    実装しています。リクエストの応答にスレッドを使うと、
    プロセスベースのサーバよりも少ないシステム資源で、
    多くのリクエストに応答することができます。
    それにもかかわらず、多くのスレッドを持った複数のプロセスを
    維持することで、
    プロセスベースのサーバの持つ安定性も保持しています。</p>

    <p>この MPM を制御するのに使われる最も重要なディレクティブは、
    <directive module="mpm_common">ThreadsPerChild</directive> と
    <directive module="mpm_common">MaxClients</directive> です。
    <directive module="mpm_common">ThreadsPerChild</directive> は
    各子プロセスで用意されるスレッド数を制御して、
    <directive module="mpm_common">MaxClients</directive> は
    起動されるスレッドの総数の最大値を制限します。</p>
</summary>
<seealso><a href="../bind.html">Apache 
の使用するアドレスとポートの設定</a></seealso>

<section id="how-it-works"><title>動作方法</title>
    <p>一つの制御用プロセス (親) が子プロセスを起動します。
    子プロセスは
    <directive module="mpm_common">ThreadsPerChild</directive>
    ディレクティブで指定された一定数のサーバスレッドと接続を
    listen するスレッドを一つ作ります。
    Listener スレッドは接続が来たときにサーバプロセスに渡します。</p>

    <p>Apache は<dfn>スペアの</dfn>、つまりアイドルなサーバスレッドの
    プールを常に維持していて、それらは入ってくるリクエストに
    答えられるように待機しています。
    このようにして、クライアントはリクエストの応答が得られるようになるために
    新しいスレッドやプロセスが生成されるのを
    待たなくてもよいようになっています。
    起動初期時のプロセス総数は、
    <directive module="mpm_common">StartServers</directive>
    ディレクティブで設定されます。稼働中に、
    Apache は全プロセスのアイドルスレッドの合計数を見積もって、
    <directive module="mpm_common">MinSpareThreads</directive> と
    <directive module="mpm_common">MaxSpareThreads</directive>
    で指定された範囲の中にこの数が収まるように fork したり
    kill したりします。この操作は非常に自律的なので、
    これらのディレクティブをデフォルト値から変更する必要は
    めったにないでしょう。
    同時に応答することのできるクライアント数の最大数
    (つまり全プロセス中の総スレッド数の最大値) は
    <directive module="mpm_common">MaxClients</directive>
    ディレクティブで決定されます。
    活動中の子プロセス数の最大値は
    <directive module="mpm_common">MaxClients</directive> を
    <directive module="mpm_common">ThreadsPerChild</directive> で割った
    ものになります。</p>
    
    <p>活動中の子プロセスの数と子プロセス中のサーバスレッドの数の越えられない
    上限を設定するディレクティブが二つあります。これらはサーバを
    完全に停止して、再起動することでしか変更することはできません。
    <directive module="mpm_common">ServerLimit
    </directive> は活動中の子プロセスの越えられない上限を設定し、
    <directive module="mpm_common">MaxClients</directive> ディレクティブ
    の値を <directive module="mpm_common">
    ThreadsPerChild</directive> の値で割った値以上である
    必要があります。<directive module="mpm_common">ThreadLimit</directive> は
    サーバスレッドの越えられない上限で、<directive 
    module="mpm_common">ThreadsPerChild</directive> ディレクティブの
    値以上である必要があります。</p>

    <p>活動中の子プロセス群に加えて、少なくとも一つのサーバスレッドが
    既存のクライアントからの接続を扱っている終了しようとしている
    子プロセスがある可能性があります。終了中のプロセスは <directive 
    module="mpm_common">MaxClients</directive> で指定された数まで
    存在できますが、実際に期待される数はずっと少なくなります。この
    振舞いは各子プロセスを終了させないようにすることで回避できます。
    これは以下の様にして実現できます。</p>
     
    <ul>
      <li><directive module="mpm_common">
      MaxRequestsPerChild</directive> の値を 0 に設定する</li>

      <li><directive module="mpm_common">
      MaxSpareThreads</directive> の値を
      <directive module="mpm_common">MaxClients</directive>
      と同じ値にする</li>
    </ul>

    <p><module>worker</module> MPM の典型的なプロセス・スレッド制御の
    設定では、次のようになります。</p>

    <example>
      ServerLimit         16<br />
      StartServers         2<br />
      MaxClients         150<br />
      MinSpareThreads     25<br />
      MaxSpareThreads     75<br />
      ThreadsPerChild     25
    </example>

    <p>通常 Unix では親プロセスは 80 番ポートにバインドするために
    <code>root</code> で起動されますが、子プロセスやスレッドは
    もっと低い権限のユーザで Apache によって起動されます。
    <directive module="mpm_common">User</directive> と
    <directive module="mpm_common">Group</directive> ディレクティブは
    Apache の子プロセスの権限を設定するのに用いられます。
    子プロセスはクライアントに送るコンテンツ全てを読めないといけませんが、
    可能な限り必要最小限の権限のみを持っているようにするべきです。
    さらに、<program>suexec</program>
    が使用されていない限り、これらのディレクティブは
    CGI スクリプトで継承される権限も設定します。</p>

    <p><directive module="mpm_common">MaxRequestsPerChild</directive>
    は、古いプロセスを停止して新しいプロセスを起動することによって、
    どの程度の頻度でサーバがプロセスをリサイクルするかを制御します。</p>
</section>

<directivesynopsis location="mpm_common"><name>AcceptMutex</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>CoreDumpDirectory</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>EnableExceptionHook</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>Group</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>PidFile</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>Listen</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>ListenBacklog</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>LockFile</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>MaxClients</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>MaxMemFree</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>MaxRequestsPerChild</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>MaxSpareThreads</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>MinSpareThreads</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>ScoreBoardFile</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>SendBufferSize</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>ReceiveBufferSize</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>ServerLimit</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>StartServers</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>ThreadLimit</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>ThreadsPerChild</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>ThreadStackSize</name>
</directivesynopsis>
<directivesynopsis location="mpm_common"><name>User</name>
</directivesynopsis>

</modulesynopsis>
