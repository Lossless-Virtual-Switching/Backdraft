import os
import subprocess

count_queue = 1
count_vhost = 2
q_size = 512
pci = os.environ.get('PCI', '7:00.1')

socket_dir='/tmp'
sockets = [os.path.join(socket_dir, 'tmp_vhost{}.sock'.format(i))
                            for i in range(count_vhost)]
vdevs = ["eth_vhost{},iface={},queues={}".format(i, socket, count_queue)
                            for i, socket in enumerate(sockets)]
print(vdevs)

for socket in sockets:
    if os.path.isfile(socket):
      subprocess.call('sudo rm {}'.format(socket), shell=True)
    elif os.path.isdir(socket):
      subprocess.call('sudo rm -r {}'.format(socket), shell=True)

pmd_ports = []
for i, vdev in enumerate(vdevs):
    port = PMDPort(name="tmp_vhost{}".format(i),
            vdev=vdev,
            num_inc_q = count_queue,
            num_out_q = count_queue,
            size_inc_q= q_size,
            size_out_q= q_size)
    pmd_ports.append(port)

# Pipeline
PortInc(port=pmd_ports[0]) -> PortOut(port=pmd_ports[1])
PortInc(port=pmd_ports[1]) -> PortOut(port=pmd_ports[0])
