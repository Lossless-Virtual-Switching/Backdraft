import scapy.all as scapy

# bess.add_worker(wid=0, core=0)
# bess.add_worker(wid=1, core=2)
# bess.add_tc('slow_flow', policy='rate_limit',
#     resource='packet', limit={'packet': slow_recv_rate}, wid=0)


# pkt specs
pkt_size = int($SN_PKT_SIZE!'60')
assert(60 <= pkt_size <= 1522)

#use scapy to build a packet template
eth = scapy.Ether(src='02:1e:67:9f:4d:ae', dst='06:16:3e:1b:72:32')
ip = scapy.IP(src='10.0.0.1', dst='10.0.0.2')   # dst IP is overwritten
tcp = scapy.TCP(sport=10001, dport=10002)
payload = ('hello' + '0123456789' * 200)[:pkt_size-len(eth/ip/tcp)]
pkt = eth/ip/tcp/payload
pkt_data = str(pkt)

sink_fast = Sink()
sink_slow = Sink()

fast_flow = FlowGen(template=pkt_data, pps=25*1000000, flow_rate = 10, flow_duration = 1.0,
  arrival='uniform', duration='uniform', quick_rampup=True, ip_src_range=100000)


slow_flow = FlowGen(template=pkt_data, pps=1*1000000, flow_rate = 10, flow_duration = 1.0,
  arrival='uniform', duration='uniform', quick_rampup=True, ip_src_range=100000)

slow_flow -> sink_slow
fast_flow -> sink_fast

