/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: protobuf/bkdrft_msg.proto */

#ifndef PROTOBUF_C_protobuf_2fbkdrft_5fmsg_2eproto__INCLUDED
#define PROTOBUF_C_protobuf_2fbkdrft_5fmsg_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _DpdkNetPerf__Overlay DpdkNetPerf__Overlay;
typedef struct _DpdkNetPerf__Ctrl DpdkNetPerf__Ctrl;


/* --- enums --- */


/* --- messages --- */

struct  _DpdkNetPerf__Overlay
{
  ProtobufCMessage base;
  uint32_t src_port;
  uint32_t dst_port;
  uint32_t src_ip;
  uint32_t dst_ip;
  uint32_t wnd_size;
};
#define DPDK_NET_PERF__OVERLAY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dpdk_net_perf__overlay__descriptor) \
    , 0, 0, 0, 0, 0 }


struct  _DpdkNetPerf__Ctrl
{
  ProtobufCMessage base;
  uint32_t qid;
  uint32_t nb_pkts;
  uint32_t total_bytes;
};
#define DPDK_NET_PERF__CTRL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dpdk_net_perf__ctrl__descriptor) \
    , 0, 0, 0 }


/* DpdkNetPerf__Overlay methods */
void   dpdk_net_perf__overlay__init
                     (DpdkNetPerf__Overlay         *message);
size_t dpdk_net_perf__overlay__get_packed_size
                     (const DpdkNetPerf__Overlay   *message);
size_t dpdk_net_perf__overlay__pack
                     (const DpdkNetPerf__Overlay   *message,
                      uint8_t             *out);
size_t dpdk_net_perf__overlay__pack_to_buffer
                     (const DpdkNetPerf__Overlay   *message,
                      ProtobufCBuffer     *buffer);
DpdkNetPerf__Overlay *
       dpdk_net_perf__overlay__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dpdk_net_perf__overlay__free_unpacked
                     (DpdkNetPerf__Overlay *message,
                      ProtobufCAllocator *allocator);
/* DpdkNetPerf__Ctrl methods */
void   dpdk_net_perf__ctrl__init
                     (DpdkNetPerf__Ctrl         *message);
size_t dpdk_net_perf__ctrl__get_packed_size
                     (const DpdkNetPerf__Ctrl   *message);
size_t dpdk_net_perf__ctrl__pack
                     (const DpdkNetPerf__Ctrl   *message,
                      uint8_t             *out);
size_t dpdk_net_perf__ctrl__pack_to_buffer
                     (const DpdkNetPerf__Ctrl   *message,
                      ProtobufCBuffer     *buffer);
DpdkNetPerf__Ctrl *
       dpdk_net_perf__ctrl__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dpdk_net_perf__ctrl__free_unpacked
                     (DpdkNetPerf__Ctrl *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DpdkNetPerf__Overlay_Closure)
                 (const DpdkNetPerf__Overlay *message,
                  void *closure_data);
typedef void (*DpdkNetPerf__Ctrl_Closure)
                 (const DpdkNetPerf__Ctrl *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor dpdk_net_perf__overlay__descriptor;
extern const ProtobufCMessageDescriptor dpdk_net_perf__ctrl__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_protobuf_2fbkdrft_5fmsg_2eproto__INCLUDED */
